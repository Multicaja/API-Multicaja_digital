swagger: '2.0'
info:
  description:  |
    Bienvenido a la API de [Multicaja](https://www.multicaja.cl) (Alpha)
    ** Este es un proyecto alpha y por lo tanto sufrirá muchos cambios **
    Todos los requests son autenticados usando un `api-key`.
    Existen dos ambientes: `qa` y `producción`. El `host` de `qa` es `apiqa.multicaja.cl`.
  version: "1.0.0"
  title: API Multicaja EMPRESAS-REST
  # put the contact info for your development or API team
  contact:
    email: matias.salinas@multicaja.cl
    
# Added by API Auto Mocking Plugin
# host: 'api.multicaja.cl'
# basePath: /v0.1-alpha/
consumes:
  - application/json
produces:
  - application/json
  
# tags are used for organizing operations
tags:
- name: ecommerce
  description: Registro de empresas
- name: cuenta bancaria
  description: Registro de empresas

paths:
  /pem/ecommerce/:
    post:
      tags:
        - ecommerce
      summary: Inicia un proceso de pre-registro
      description: |
        Permite buscar un usuario con los datos  indicados.
      parameters:
        - in: body
          name: data
          description: RUT y Correo del usuario que quiere obtener una tarjeta
          required: true
          schema:
            $ref: '#/definitions/statusSignUpParams'
      responses:
        201:
          description: |
            OK - Consulte objeto de respuesta para saber qué pasos faltan y qué información puede mostrar pre llenada.
          schema:
            $ref: '#/definitions/statusSignUpParams'
        401:
          description: RUT o email corresponden a Cliente que ya tiene clave y que debe autenticarse para realizar esta operación
        403:
          description: Usuario borrado o bloqueado
        422:
          description: No viene RUT o no viene email
    put:
      tags:
        - ecommerce
      summary: Actualiza el usuario
      description: |
        Permite buscar un usuario con los datos  indicados.
      parameters:
        - in: body
          name: data
          description: RUT y Correo del usuario que quiere obtener una tarjeta
          required: true
          schema:
            $ref: '#/definitions/SignUp'
      responses:
        201:
          description: |
            OK - Consulte objeto de respuesta para saber qué pasos faltan y qué información puede mostrar pre llenada.
          schema:
            $ref: '#/definitions/SignUp'
        401:
          description: RUT o email corresponden a Cliente que ya tiene clave y que debe autenticarse para realizar esta operación
        403:
          description: Usuario borrado o bloqueado
        422:
          description: No viene RUT o no viene email
  /pem/ecommerce/find:
    get:
      tags:
        - ecommerce
      summary: Muestra el status del ecommerce
      description: |
        Muestra el status del ecommerce
      parameters:
        - name: "rut"
          in: "query"
          description: "rut sin puntos ni dígito verificador"
          type: integer
        - name: "email"
          in: "query"
          description: "email"
          type: string
        - in: "query"
          name: "id"
          description: "ID de usuario"
          type: integer
      responses:
        201:
          description: |
            OK - Consulte objeto de respuesta para saber qué pasos faltan y qué información puede mostrar pre llenada.
          schema:
            $ref: '#/definitions/SignUp'
        401:
          description: RUT o email corresponden a Cliente que ya tiene clave y que debe autenticarse para realizar esta operación
        403:
          description: Usuario borrado o bloqueado
        422:
          description: No viene RUT o no viene email
  /pem/ecommerce/{ecommerce_id}/accept_terms_and_contitions:
    post:
      tags:
        - ecommerce
      summary: Inicia un proceso de pre-registro
      description: |
        Permite aceptar los terminos y condiciones.
      parameters:
        - in: path
          name: ecommerce_id
          description: ID del ecommerce
          required: true
          type: "integer"
      responses:
        200:
          description: |
            OK - Consulte objeto de respuesta para saber qué pasos faltan y qué información puede mostrar pre llenada.
          schema:
            $ref: '#/definitions/statusSignUpParams'
        401:
          description: RUT o email corresponden a Cliente que ya tiene clave y que debe autenticarse para realizar esta operación
        403:
          description: Usuario borrado o bloqueado
        422:
          description: No viene RUT o no viene email
  /pem/bank_accounts/{ecommerce_id}:
    get:
      summary: Listar
      tags: 
        - cuenta bancaria
      parameters:
        - in: path
          name: ecommerce_id
          description: ID del ecommerce
          required: true
          type: "integer"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/bank_account'
        '404':
          description: Cliente no existe
    post:
      summary: Crear o actualizar
      tags: 
        - cuenta bancaria
      description: |
        Crea una nueva cuenta bancaria para este cliente
        
        * La terna (`account.bank_id`, `account.acc_type`, `account.acc_number`) debe ser única para este usuario. De lo contrario, el servicio retornará `405`
      parameters:
        - in: path
          name: ecommerce_id
          description: ID del ecommerce
          required: true
          type: "integer"
        - in: body
          name: account
          description: Cuenta bancaria
          required: true
          schema:
            $ref: '#/definitions/bank_account_new'
      responses:
        '201':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/bank_account'
        '404':
          description: Cliente no existe
        '405':
          description: La cuenta ya existe
        '422':
          description: La cuenta contiene datos inválidos
          
definitions:
  statusSignUpParams:
    type: object
    description: |
      Solicitud de registro de un Cliente Multicaja.cl **(Request)**
    properties:
      email:
        type: string
        description: email del ecommerce
        example: "pepito@gmail.com"
      rut:
        type: integer
        description: rut del prospecto de ecommerce, sin puntos, guión ni DV
        example: 15776844     
        
  SignUp:
    type: object
    description: |
      Solicitud de registro de un Cliente Multicaja.cl **(Request)**
    properties:
      id:
        type: integer
        description: Id de signup
        example: "SignUp"
      business:
        $ref: '#/definitions/basicDataSignUp'
      email: 
        $ref: '#/definitions/emailObj'
      legalname: 
        type: string
        description: Razon social
        example: "Multicaja S.A."
      category:
        type: string
        description: Rubro de la empresa
        example: "Fabricante de apis"
      phone:
        type: integer
        description: Telefono
        example: 82093802
      address:
        $ref: '#/definitions/addressObj'
      legal_representative:
        $ref: '#/definitions/basicDataSignUp'


  basicDataSignUp:
    type: object
    description: |
      Rut y nombre
    properties:
      rut:
        type: integer
        description: Rut de eccommerce sin puntos ni guiones
        example: 75605356
      name:
        type: string
        description: Nombre de fantasia
        example: "Multicaja"
  addressObj:
    type: object
    description: |
      Direccion
    required:
      - address
      - commune_id
      - region_id
    properties:
      address:
        type: string
        description: Direccion
        example: "calle 123"
      commune_id:
        type: integer
        description: digito verificador
        example: 
      region_id:
        type: integer
        description: digito verificador
        example: 12
        
  emailObj:
    type: object
    properties: 
      email:
        type: string
        description: Dirección de correo
        example: "contacto@multicaja.cl"
      status:
        type: string
        enum:
          - validado
          - novalidado
          - bloqueado
    description: |
          Correo electronico
          
  
  bank_account_new:
    type: object
    description: Cuenta bancaria personal **(Request)**
    required:
      - bank_id
      - acc_type
      - acc_number
    properties:
      bank_id:
        type: integer
        description: ID del banco (revisar /params/banks)
        example: 4
      acc_type:
        type: string
        description: Tipo de cuenta
        enum:
          - vista
          - corriente
          - ahorro
      acc_number:
        type: string
        description: Número de cuenta sin puntos, guiones, ni ceros a la izquierda
        
  bank_account:
    type: object
    description: Cuenta bancaria personal **(Response)**
    properties:
      ecommerce_id:
        type: integer
        description: ID del commerce
        example: 7783834
      bank_id:
        type: integer
        description: ID del banco (revisar /params/banks)
        example: 4
      acc_type:
        type: string
        description: Tipo de cuenta
        enum:
          - vista
          - corriente
          - ahorro
      acc_number:
        type: string
        description: Número de cuenta sin puntos, guiones, ni ceros a la izquierda
      acc_email:
        type: string
        description: email de cuenta sin puntos, guiones, ni ceros a la izquierda
      status:
        type: string
        enum:
          - no_validada
          - validada
        description: |
          Estado de validación de la cuenta
          * no_validada: estado por defecto
          * validada: el usuario hizo una aviso de depósito seguido de una transferencia desde esta cuenta
      timestamps:
        $ref: '#/definitions/timestamps'
      
  timestamps:
    type: object
    description: |
      Fecha de creación y de última modificación **(Response)**
      Componente de `address`, `user`, `rut` y otros objetos
      **No se usa de manera independiente en la API**
    properties:
      created_at:
        type: string
        format: date-time
        example: "2018-01-14T15:27:42.669Z"
      updated_at:
        type: string
        format: date-time
        example: "2018-03-02T10:03:12.123Z"    
  
        
        
