swagger: '2.0'
info:
  description: |
    API de Prepago Multicaja (Alpha)

    ** Este es un proyecto alpha y por lo tanto sufrirá muchos cambios **

    Todos los requests son autenticados usando un `api-key`.

    Existen dos ambientes: `qa` y `producción`. El `host` de `qa` es `apiqa.multicaja.cl/prepaid`.
  version: '0.6'
  title: API Multicaja (Alpha)
host: 'api.multicaja.cl'
basePath: /v0.6-alpha/
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: prepago
    description: Operaciones relacionadas con Prepago Multicaja
paths:
  /prepaid/{user_id}:
    get:
      summary: Consultar
      tags: 
        - prepago
      description: |
        Indica si el cliente tiene un Prepago Multicaja. En caso afirmativo, retorna la tarjeta truncada.
        
        * Si el cliente tiene Prepago Multicaja, `has_prepaid_account` será `true`.
        * `card.timestamps.created_at` indicará la fecha en la que este cliente obtuvo su primera tarjeta de prepago
        * `card.timestamps.updated_at` indicará la fecha de la última acción de *bloqueo*, *desbloqueo* y *reemisión*.
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - has_prepaid_card
            properties:
              has_prepaid_card:
                type: string
                description: "`true` si el cliente tiene un Prepago Multicaja; `false` en caso contrario"
                example: true
              card:
                $ref: '#/definitions/PrepaidCard'
        '404':
          description: Cliente no existe o no tiene un Prepago Multicaja
    post:
      summary: Emitir (o reemitir) una tarjeta a este usuario
      tags: 
        - prepago
      description: |
        Asigna una nueva tarjeta Prepago Multicaja a este cliente.

        ### Notas
        - Como requisito para invocar este servicio, el cliente debe tener `name` y `lastname_1` no vacíos, y además cumplir que `(rut.status == "validado_srcei" || rut.status == "validado_tef") && email.status == "validado" && cellphone.stauts == "validado"`
        - Si el usuario ya tenía una tarjeta, este método eliminará la anterior.
        - `first_load_amount` **debe** incluirse la primera vez que si invoca este método en un usuario.
        - `first_load_amount` **no debe** incluirse cuando se reemite una tarjeta.
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
        - in: body
          name: first_load_amount
          description: |
            Monto de la primera carga en pesos

            `first_load_amount.currency_code` **debe** ser 152
          schema:
            $ref: '#/definitions/NewAmountAndCurrency'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/PrepaidCard'
        '404':
          description: Cliente no existe
        '422':
          description: Hubo un error de validación
          schema:
            $ref: '#/definitions/ErrorObj'
  /prepaid/{user_id}/balance:
    get:
      summary: Ver saldo
      tags: 
        - prepago
      description: |
        Retorna el saldo de la tarjeta
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PrepaidCardBalance'
        '404':
          description: Cliente no existe o no tiene un Prepago Multicaja
  /prepaid/{user_id}/balance/topup:
    post:
      summary: Aumentar saldo
      tags: 
        - prepago
      description: |
        Aumenta el saldo
        
        Retorna el nuevo saldo de la tarjeta y un movimiento con un código de autorización
        
        * `topup_amount` corresponde al monto en pesos que se desea recargar
        * `merchant_transaction_id` corresponde a un identificador de la recarga en el canal. El servicio es idempotente para recargas con el mismo identificador y con idéntico `topup_amount`.
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
        - in: body
          name: recarga
          required: true
          schema:
            type: object
            properties:
              merchant_transaction_id:
                type: string
                description: Identificador único de la recarga en el canal
                example: "20180315-77685-12"
              topup_amount:
                description: Monto de la recarga
                type: integer
                example: 5000
      responses:
        '201':
          description: OK
          schema:
            type: object
            properties:
              balance:
                type: integer
                description: Saldo de la tarjeta
                example: 3250
              transaction:
                $ref: '#/definitions/PrepaidTransaction'
        '404':
          description: Cliente no existe o no tiene un Prepago Multicaja
        '422':
          description: La recarga contiene datos inválidos
          schema:
            $ref: '#/definitions/ErrorObj'
  /prepaid/{user_id}/balance/withdraw:
    post:
      summary: Retirar
      tags: 
        - prepago
      description: |
        Disminuye el saldo de la tarjeta
        
        Retorna el nuevo saldo de la tarjeta y un movimiento con un código de autorización
        
        * `withdrawal_amount` corresponde al monto en pesos que se desea retirar
        * `merchant_transaction_id` corresponde a un identificador del retiro en el canal. El servicio es idempotente para retiros con el mismo identificador y con idéntico `withdrawal_amount`.
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
        - in: body
          name: retiro
          required: true
          schema:
            type: object
            properties:
              merchant_transaction_id:
                type: string
                description: Identificador único del retiro en el canal
                example: "20180315-77685-12"
              withdrawal_amount:
                description: Monto del retiro
                type: integer
                example: 5000
      responses:
        '201':
          description: OK
          schema:
            type: object
            properties:
              balance:
                type: integer
                description: Saldo de la tarjeta
                example: 3250
              transaction:
                $ref: '#/definitions/PrepaidTransaction'
        '404':
          description: Cliente no existe o no tiene un Prepago Multicaja
        '422':
          description: El retiro contiene datos inválidos
          schema:
            $ref: '#/definitions/ErrorObj'
  /prepaid/{user_id}/status/lock:
    post:
      summary: Bloquear
      tags:
        - prepago
      description: |
        Bloquea la tarjeta. Si la tarjeta ya está bloqueada, no hace nada.
        
        **Para invocar este servicio, el cliente ya debe tener un Prepago Multicaja**
        
        Si el cliente no tiene Prepago Multicaja, el servicio retornará `405`
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/PrepaidCard'
        '404':
          description: Cliente no existe
        '405':
          description: Cliente no cuenta con un Prepago Multicaja
  /prepaid/{user_id}/status/unlock:
    post:
      summary: Desbloquear
      tags:
        - prepago
      description: |
        Desbloquea la tarjeta. Si la tarjeta ya está activa o expirada, no hace nada.
        
        **Para invocar este servicio, el cliente ya debe tener un Prepago Multicaja**
        
        Si el cliente no tiene Prepago Multicaja, el servicio retornará `405`
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/PrepaidCard'
        '404':
          description: Cliente no existe
        '405':
          description: Cliente no cuenta con un Prepago Multicaja
  /prepaid/{user_id}/transactions:
    get:
      summary: Buscar transacciones
      tags: 
        - prepago
      parameters:
        - in: path
          name: user_id
          description: ID del usuario
          required: true
          type: "integer"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PrepaidTransaction'
        '404':
          description: Cliente no existe
  /prepaid/processor/notification:
    post:
      summary: Notificación (Callback)
      tags: 
        - prepago
      description: |
        Notifica una transacción ocurrida en una tarjeta de prepago
        
        **Mensaje invocado por el procesador emisor**
        
        * Si el mensaje de entrada no corresponde an un `ISO8583Transaction`, el servicio responderá `422`
      parameters:
        - in: body
          name: transaction
          description: Transacción
          required: true
          schema:
            $ref: '#/definitions/ISO8583Transaction'
      responses:
        '200':
          description: OK
        '422':
          description: El mensaje `ISO8583Transaction` tiene errores
          schema:
            $ref: '#/definitions/ErrorObj'
definitions:
  Timestamps:
    type: object
    description: |
      Fecha de creación y de última modificación.  Campo read-only.
      Componente de `Address`, `User`, `Rut`, `CellPhone`, `Email`, `BankAccount` y `CompanyData`

      **No se usa de manera independiente en la API**
    properties:
      created_at:
        type: string
        format: date-time
        example: "2018-01-14T15:27:42.669Z"
      updated_at:
        type: string
        format: date-time
        example: "2018-03-02T10:03:12.123Z"
  ISO8583Transaction:
    type: object
    description: Request y response en formato ISO 8583
    properties:
      entidad_codigo:
        type: string
        description: Código de entidad en el procesador
        example: "9603"
      cliente:
        type: object
        description: cliente afectado por la transacción
        properties:
          centro_alta:
            type: string
            description: Sucursal donde se dio de alta al cliente. 4 dígitos.
            example: "0001"
          cuenta:
            type: string
            description: Identificador del cliente. 12 dígitos.
            example: "000000012345"
          tipo_documento:
            type: string
            description: Tipo de documento que identifica al cliente. 3 caracteres.
            example: "RUT"
          numero_documento:
            type: string
            description: Número de documento. Si es RUT, no incluye dígito verificador
            example: "14569484"
      tarjeta:
        type: object
        description: tarjeta afectada por la transacción
        properties:
          pan:
            type: string
            description: PAN de la tarjeta. 16 dígitos.
            example: "4111111111111111"
          expiracion:
            type: string
            description: Fecha de caducidad de la tarjeta. Formato "MM/yy"
            example: "03/22"
          bloqueo_codigo:
            type: string
            description: Código de bloqueo de la tarjeta
            example: "010"
          bloqueo_descripcion:
            type: string
            description: Descripción del bloqueo de la tarjeta
            example: "MORA GRAVE"
          saldo:
            type: object
            description: saldo del cliente antes y después de la transacción
            properties:
              codigo_moneda:
                type: string
                description: Código ISO de la moneda del saldo. 3 caracteres.
                example: "CLP"
              saldo_dispuesto_antes:
                type: string
                description: Saldo dispuesto **antes** de realizar la transacción. 2 decimales a la derecha.
                example: "1983000"
              saldo_autorizado_antes:
                type: string
                description: Saldo autorizado **antes** de realizar la transacción. 2 decimales a la derecha.
                example: "100000"
              saldo_dispuesto_despues:
                type: string
                description: Saldo dispuesto **después** de realizar la transacción. 2 decimales a la derecha.
                example: "1882900"
              saldo_autorizado_despues:
                type: string
                description: Saldo autorizado **después** de realizar la transacción. 2 decimales a la derecha.
                example: "200100"
      mensaje_entrada:
        type: object
        description: Mensaje que llegó al procesador
        properties:
          codigo_moneda_local:
            type: string
            description: Código ISO de la moneda de cardholder billing. 3 caracteres. DE51.
            example: "CLP"
          monto_local:
            type: string
            description: Monto de cardholder billing. 2 decimales a la derecha. DE6.
            example: "100100"
          codigo_moneda_origen:
            type: string
            description: Código ISO de la moneda de la transacción. 3 caracteres. DE49.
            example: "EUR"
          monto_origen:
            type: string
            description: Monto de la transacción. 2 decimales a la derecha. DE4.
            example: "154"
          comercio_nombre:
            type: string
            description: Nombre del comercio.
            example: "AMAZON UK"
          comercio_pais:
            type: string
            description: Codigo ISO del país del comercio
            example: "GBR"
          timestamp:
            type: string
            description: Fecha y hora de la transacción
            example: "2018-01-14T15:27:42.669Z"
      mensaje_respuesta:
        type: object
        description: Mensaje que respondió el procesador
        properties:
          factura_codigo:
            type: string
            description: Tipo factura
            example: "TF491"
          factura_descripcion:
            type: string
            description: Descripción del tipo de factura
            example: "COMPRA EN CUOTAS"
          codigo_autorizacion:
            type: string
            description: Monto de cardholder billing. 2 decimales a la derecha. DE6.
            example: "100100"
          respuesta_tipo_codigo:
            type: string
            description: Código del tipo de respuesta (aprobado, rechazado, etc.)
            example: "110"
          respuesta_tipo_descripcion:
            type: string
            description: Descripción del tipo de respuesta
            example: "APROBADO"
          respuesta_codigo_autorizacion:
            type: string
            description: Identificador del código de aprobación devuelto a la red
            example: "123456"
          timestamp:
            type: string
            description: Fecha y hora de la respuesta
            example: "2018-01-14T15:27:42.669Z"
      raw_iso_8583_request:
        type: string
        description: Mensaje de entrada ISO 8583 codificado en base64
        example: TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvS4=
      raw_iso_8583_response:
        type: string
        description: Mensaje de respuesta ISO 8583 codificado en base64
        example: vdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c=
  NewAmountAndCurrency:
    type: object
    description: Monto en una moneda específica **(Request)**
    required:
      - currency_code
      - amount
    properties:
      currency_code:
        type: integer
        description: Código ISO 4217 (numeric) de la moneda
        example: 152
      amount:
        type: string
        description: |
          Saldo de la tarjeta

          ### Formato
          - Este campo es un número con parte decimal en el formato [parte entera].[parte decimal]
          - El separador de decimales es un punto (".")
          - Siempre vendrán dos decimales a la derecha del punto
          - El string no incluye separador de miles ni código de moneda
        example: "1000.00"
  AmountAndCurrency:
    type: object
    description: |
       Monto en una moneda específica **(Response)**
    allOf:
      - $ref: "#/definitions/NewAmountAndCurrency"
      - type: object
        required:
          - currency_description
        properties:
          currency_description:
            type: integer
            description: Nombre de la moneda en español
            example: "Peso Chileno"
  Place:
    type: object
    description: Lugar donde ocurrió la transacción **(Response)**
    required:
      - country_iso_3266_code
    properties:
      country_iso_3266_code:
        type: integer
        description: Código ISO 3266-1 (numeric) del país
        example: 152
      country_description:
        type: string
        description: Nombre del país en español
        example: "República de Chile"
      place_name:
        type: string
        description: Nombre del lugar donde ocurrió el movimiento
        example: "Santiago"
  Merchant:
    type: object
    description: Comercio de origen **(Response)**
    required:
      - code
      - name
    properties:
      code:
        type: string
        description: Código único que identifica al comercio
        example: "0008902131"
      name:
        type: string
        description: Nombre del comercio
        example: "AMAZON UK"
  TransactionType:
    type: object
    description: Tipo de transacción **(Response)**
    required:
      - type_code
      - type_description
      - is_ammendment
      - is_positive
    properties:
      type_code:
        type: string
        description: Tipo de factura
        example: "0012"
      type_description:
        type: string
        description: Descripción tipo de factura
        example: "COMPRA EN CUOTAS"
      is_ammendment:
        type: string
        description: |
          `true`: es una corrección
          `false`: no es una corrección
        example: "false"
      is_positive:
        type: string
        description: |
          `true`: es positivo
          `false`: es negativo
        example: "true"
  PrepaidCardBalance:
    type: object
    description: |
      Saldo de la tarjeta de prepago

      ### Notas
      - Este objeto contiene el saldo el pesos y el saldo en dólares
      - El saldo en pesos viene en `primary_balance`
      - El saldo en dólares viene en `secondary_balance`
    properties:
      primary_balance:
        $ref: '#/definitions/AmountAndCurrency'
      secondary_balance:
        $ref: '#/definitions/AmountAndCurrency'
  PrepaidTransaction:
    type: object
    required:
      - transaction_type
      - auth_code
      - processor_transaction_id
      - pan
      - real_date
      - ampunt_primary
    description: |
      Transacción realizada con la tarjeta de prepago **(Response)**

      ### Notas
      - `amount_primary` es el monto de la transacción en pesos. Éste es el monto que afectó al saldo.
      - `amount_foreign` es el monto de la transacción en la moneda de origen. 
    properties:
      transaction_type:
        $ref: '#/definitions/TransactionType'
      auth_code:
        type: string
        description: Identificador del movimiento enviado a la marca
        example: "884157"
      processor_transaction_id:
        type: string
        description: Identificador del movimiento en el procesador
        example: "112100908"
      pan:
        type: string
        description: Número de tarjeta truncado
        example: "556677******1234"
      real_date:
        type: string
        description: Fecha en la que ocurrió el movimiento, en formato yyyy-MM-dd
        example: "2018-03-17"
      accounting_date:
        type: string
        description: Fecha en la que quedó contabilizado el movimiento, en formato yyyy-MM-dd
        example: "2018-03-19"
      processing_date:
        type: string
        description: Fecha en la que se presentó el movimiento, en formato yyyy-MM-dd
        example: "2018-03-18"
      amount_primary:
        $ref: '#/definitions/AmountAndCurrency'
      amount_foreign:
        $ref: '#/definitions/AmountAndCurrency'
      country:
        $ref: '#/definitions/Country'
      merchant:
        $ref: '#/definitions/Merchant'
  PrepaidCard:
    type: object
    required:
      - id
      - pan
    description: Tarjeta de prepago Visa o Mastercard **(Response)**
    properties:
      id:
        type: integer
        description: Identificador interno. Campo read-only.
        example: 7783834
      processor_user_id:
        type: string
        description: Identificador del cliente en el procesador
        example: "2231-9892-781283049685"
      pan:
        type: string
        description: PAN de la tarjeta
        example: "123456******1234"
      expiration:
        type: string
        description: Fecha de expiración de la tarjeta
        example: "11/22"
      status:
        type: string
        enum:
          - activa
          - bloqueada
          - expirada
        description: |
          Estado de la tarjeta
          * activa: permite comprar
          * bloqueada: la tarjeta fue bloqueada por el cliente
          * expirada: la tarjeta expiró
      timestamps:
        $ref: '#/definitions/Timestamps'
  ErrorObj:
    type: object
    description: Error que devuelve la api ante un `HTTP 422` **(Response)**
    required:
      - code
    properties:
      code:
        type: integer
        format: int32
        description: Código que representa el error. No será igual al código HTTP.
        example: 1024
      message:
        type: string
        description: Descripción corta del error
        example: "El cliente no pasó la validación"
      details:
        type: array
        items:
          $ref: '#/definitions/ErrorObjDetail'
  ErrorObjDetail:
    type: object
    description: |
      Cuando un error está compuesto por una lista de sub-errores, vendrán en este objeto
      Componente de `ErrorObj`
      
      **No se usa de manera independiente en la API**
    properties:
      code:
        type: integer
        format: int32
        description: Código que representa el sub-error
        example: 227
      message:
        type: string
        description: Descripción del sub-error
        example: "El nombre no puede estar vacío"