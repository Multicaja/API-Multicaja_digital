 
swagger: '2.0'
info:
  description:  |
    Bienvenido a la API de [Multicaja](https://www.multicaja.cl)
    Todos los requests son autenticados usando un `api-key`.
  version: "1.0.0"
  title: API de Pagos de Multicaja
  # put the contact info for your development or API team
  contact:
    email: matias.salinas@multicaja.cl
    

consumes:
  - application/json
produces:
  - application/json
  
# tags are used for organizing operations
tags:
- name: transaccional
  description: Opciones de la  Orden
- name: general
  description: Información transversal de todos los medios de pago

paths:
  /payments/v1.0/orders:
    post:
      tags:
      - transaccional
      summary: Generar una order (Intención de pago)
      description: |
        Servicio para poder crear una intención de pago.
        Los campos obligatorios son : 
        
          * **reference_id** : Es el **ID** interno del comercio.
          * **user** :: Se pueden enviar los datos de usuario como el correo. 
          * **amount** : Datos del monto.
          * **description** : Descripción de orden.
          * **urls** : Url de redirección para los casos de éxito y error.
          * **methods** : Lista de medios de pago habilitados ´["paypal","tarjetas"]´ 
          Nota: se puede usar * para utilizar todos los medios de pago, quedando el primer valor del arreglo como asterisco ['*'].
          * **items** : El campo item list contiene la siguiente lista de objetos los cuales pertenecen al detalle de la operación.
          
            { 
              name : string,
              code : string,
              price : number,
              quantity : number
            }
          
          **Son opcionales y dependen del negocio**: 
          * **customs**  : 
            El campo item list contiene la siguiente lista de key/value los cuales son utiles en el caso de ocupar un webhook.
            
            * **{ 
              key : string,
              value : string
            } **
          
          * **urls** : Son las url de retorno en caso de que la operación se relice con éxito o error.
          
      parameters:
      - in: body
        required: true
        name: body
        description: Parametros de entrada para el comercio
        schema:
          $ref: '#/definitions/ordersModel'
      consumes:
      - application/json    
      produces:
      - application/json
      responses:
        201:
          description: Orden creada con éxito
          schema:
            $ref: '#/definitions/orderModelResponse'
        400:
          description: Parametros de entrada incorrectos
          schema:
            $ref: '#/definitions/ErrorModel'
  /payments/v1.0/orders/{order_id}:
    get:
      tags:
      - transaccional
      description: |
        Servicio para poder obtener detalles de la orden y su estado actual
      summary: Obtener el estado de la orden
      operationId: addInventory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: path
          name: order_id
          description: ID de orden de boton de pago
          required: true
          type: number
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/orderModelResponse'
        400:
          description: Parametros de entrada incorrectos
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: error obtención de datos
    put:
      tags:
      - transaccional
      summary: Actualizar la orden
      description: |
        Servicio para actualizar orden, permite actualizar los siguientes campos :  
        
          * **reference_id** : Es el **ID** interno del comercio.
          * **description** : Descripción de orden.
          * **items** : El campo item list contiene la siguiente lista de objetos los cuales pertenecen al detalle de la operación.
          
            * **{ 
              name : string,
              code : string,
              price : string,
              quantity : string
            }** 
          
          * **customs**  : 
            El campo item list contiene la siguiente lista de key/value los cuales son utiles en el caso de ocupar un webhook.
            
            * **{ 
              key : string,
              value : string
            }** 
            
          
          * **urls** : Son las url de retorno en caso de que la operación se relice con éxito o error.
          
          
          **NOTA:** Esta operación solo esta permitida con ordenes pendientes de pago.
          
      parameters:
        - in: path
          name: order_id
          description: ID de orden
          required: true
          type: number
        - in: body
          required: true
          name: body
          description: Parametros de entrada para el comercio
          schema:
            $ref: '#/definitions/ordersModel'
      consumes:
      - application/json    
      produces:
      - application/json
      responses:
        201:
          description: Orden creada con éxito
          schema:
            $ref: '#/definitions/orderModelResponse'
        400:
          description: Parametros de entrada incorrectos
          schema:
            $ref: '#/definitions/ErrorModel'
      
    delete:
      tags:
      - transaccional
      summary: Cancelar la orden
      description: |
        Este servicio permite anular orden.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: path
          name: order_id
          description: id de orden de boton de pago
          required: true
          type: number
      responses:
        200:
          description: ok
        400:
          description: Parametros de entrada incorrectos
          schema:
            $ref: '#/definitions/ErrorModel'
        410:
          description: La intención de pago fue anulada.
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: error orden no existe
 
  /payments/v1.0/general/paymentmethods:
    get:
      tags:
      - general
      summary: Obtener lista de medios de pago
      description: |
        Muestra una lista de medios de pago.
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/paymentMethodItemObject'  
        410:
          description: La orden fue anulada.
          schema:
            $ref: '#/definitions/ErrorModel' 
        
  
definitions:

  userModel:
    type: object
    properties:
      email:
        type: string
        example: "example@multicaja.cl"
      
  ordersModel:
    type: object
    required:
    - reference_id
    - amount
    - description
    - payments
    properties:
      reference_id:
        type: string
        example: "ERWER213"
        maximum: 30
      user:
        $ref: '#/definitions/userModel'
      amount:
        $ref: '#/definitions/amountModel'
      methods:
        type: array
        example: ['paypal', 'tarjetas']
        items:
          type: string
          example: "paypal"
      items:
        type: array
        items:
          $ref: '#/definitions/itemModel'
      description:
        type: string
        example: Esta es una orden
        maximum: 300
      customs:
        type: array
        items:
          $ref: '#/definitions/customModel'
      urls:
        $ref: '#/definitions/urlModel'

  orderModelResponse:
    allOf:
      - $ref: '#/definitions/ordersModel'
      - properties:
          status:
            type: string
            enum: ['pending', 'canceled', 'completed','expired']
            example: "pending"
          order_id:
            type: number
            example: 645646
          redirect_url:
            type: string
            example: 'http://pagos.multicaja.cl/url_retorno'
            maximum: 300
            
  amountModel:
    type: object
    properties:
      currency:
        type: string
        example: "CLP"
      total:
        type: number
        example: 41000
      details:
        type: object
        properties:
          subtotal:
            type: number
            example: 39000
          fee:
            type: number
            example: 1000
          tax:
            type: number
            example: 1000
            
  customModel:
    type: object
    properties:
      key:
        type: string
        example: "cardId"
        maximum: 500
      value:
        type: string
        example: "1306374"
        maximum: 500


  itemModel: 
    properties:
      name:
        type: string
        example: "name"
        maximum: 150
      code:
        type: string
        example: "code"
        maximum: 64
      price:
        type: number
        example: 39000
      unit_price:
        type: number
        example: 13000
      quantity:
        type: number
        example: 3

  
        
  urlModel:
    required:
      - return_url 
      - cancel_url
    properties:
      return_url:
          type: string
          example: "http://multicaja.cl/return_url"
          maximum: 300
      cancel_url:
          type: string
          example: "http://multicaja.cl/cancel_url"
          maximum: 300
          
  paymentMethodItemObject:
    type: object
    properties:
      payment_method:
        type: string
        example: 'paypal'
      payment_max_amount:
        type: number
        example: 40000
        
  ErrorModel:
    type: object
    properties:
      code: 
        type: string
        example: ERROR_CODE
        description: Variable de error
      message:
        type: string
        example: '{error_message}'
        description: Descripción del error
