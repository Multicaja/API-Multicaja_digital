 
swagger: '2.0'
info:
  description:  |
    Bienvenido a la API de [Multicaja](https://www.multicaja.cl)
    Todos los requests son autenticados usando un `api-key`.
  version: "1.0.0"
  title: API de Pagos de Multicaja
  # put the contact info for your development or API team
  contact:
    email: mario.gonzales@multicaja.cl
    

consumes:
  - application/json
produces:
  - application/json
  
# tags are used for organizing operations
tags:
- name: transaccional
  description: Opciones de la  Orden

paths:
  /payments/v1.0/orders:
    post:
      tags:
      - transaccional
      summary: Generar una order (Intención de pago)
      description: |
        Servicio para poder crear una intención de pago.
        Los campos obligatorios son : 
        * **reference_id**: **ID** interno del comercio.
        * **user**: Lista con propiedades del usuario (ej. `"email": "example@multicaja.cl"`).
        * **amount** : Lista con propiedades de montos a pagar.
          * **currency**: Tipo de modeda (ej.: `CLP`)
          * **total**: Total a pagar incluyendo impuestos.
          * **details**: Lista con propiedades de detalles de montos de pago.
            * **subtotal**: Suma total monto de items antes de impuestos.
            * **fee**: Comisión aplicado al subtotal.
            * **tax**: Impuesto aplicado al subtotal.
        * **methods** : Lista con textos de medios de pago habilitados, utilizando caracter asterisco para considerar todos los medios de pago. (ej.: ´["paypal","tarjetas"]´, `['*']`).
        * **items**: Lista con propiedades de productos/servicios a adquirir. Son opcionales y dependen del negocio.
          * **name**: Nombre.
          * **code**: Codigo.
          * **price**: Suma del precio total de unidades del producto.
          * **unitPrice**: Precio unitario.
          * **quantity**: Cantidad de productos.
        * **description**: Descripción de orden.
        * **customs**: lista de propiedades llave/valor necesarios para ejecutar un webhook (ej. `"key": "cardId", "value": "123456"`).
          * **key**: Identificador de propiedad.
          * **value**: Valor de propidad.
        * **urls** : Url de redirección para los casos de éxito y error.
          * **return_url**: URL de retorno a página de e-commerce en caso de una compra exitosa.
          * **cancel_url**: URL de retorno a página de e-commerce en caso de una compra fallida.
        * **webhooks** : APIs REST requeridas dentro del flujo de creación de una orden, las cuales en su ausencia, son obtenidas desde DB.
          * **webhook_request_process** : Utilizado en etapa de solicitud de creación de una orden.
          * **webhook_confirm** : Ejecutado en etapa de confirmación/notificación de orden.
          * **webhook_reject** : Usado cuando orden ha sido rechazada en cualquiera de sus etapas.
      parameters:
      - in: body
        required: true
        name: body
        description: Parametros de entrada para el comercio
        schema:
          $ref: '#/definitions/ordersModel'
      consumes:
      - application/json    
      produces:
      - application/json
      responses:
        201:
          description: Orden creada con éxito
          schema:
            $ref: '#/definitions/orderModelResponse'
        400:
          description: Parametros de entrada incorrectos
          schema:
            $ref: '#/definitions/ErrorModel'
        403: 
          description: Prohibido continuar
          schema:
            $ref: '#/definitions/ErrorModel'
        500: 
          description: Error interno en procesamiento
          schema:
            $ref: '#/definitions/ErrorModel'
        502: 
          description: Error en respuesta de servicio
          schema:
            $ref: '#/definitions/ErrorModel'
  /payments/v1.0/orders/{order_id}:
    get:
      tags:
      - transaccional
      description: |
        Servicio para poder obtener detalles de la orden y su estado actual.
      summary: Obtener el estado de la orden
      operationId: addInventory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: path
          name: order_id
          description: ID de orden de boton de pago
          required: true
          type: number
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/orderModelResponse'
        400:
          description: Parametros de entrada incorrectos
          schema:
            $ref: '#/definitions/ErrorModel'
        403: 
          description: Prohibido continuar
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: Error obtención de datos
        500: 
          description: Error interno en procesamiento
          schema:
            $ref: '#/definitions/ErrorModel'
        502: 
          description: Error en respuesta de servicio
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      tags:
      - transaccional
      summary: Cancelar la orden
      description: |
        Este servicio permite anular orden.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: path
          name: order_id
          description: id de orden de boton de pago
          required: true
          type: number
      responses:
        200:
          description: ok
        400:
          description: Parametros de entrada incorrectos
          schema:
            $ref: '#/definitions/ErrorModel'
        410:
          description: La intención de pago fue anulada.
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: error orden no existe

definitions:

  userModel:
    type: object
    properties:
      email:
        type: string
        example: "example@multicaja.cl"
  
  ordersModel:
    type: object
    required:
    - reference_id
    - amount
    - description
    - payments
    properties:
      reference_id:
        type: string
        example: "ERWER213"
        maximum: 30
      user:
        $ref: '#/definitions/userModel'
      amount:
        $ref: '#/definitions/amountModel'
      methods:
        type: array
        example: ['paypal', 'tarjetas']
        items:
          type: string
          example: "paypal"
      items:
        type: array
        items:
          $ref: '#/definitions/itemModel'
      description:
        type: string
        example: Esta es una orden
        maximum: 300
      customs:
        type: array
        items:
          $ref: '#/definitions/customModel'
      urls:
        $ref: '#/definitions/urlModel'
      webhooks:
        $ref: '#/definitions/webhookModel'

  orderModelResponse:
    allOf:
      - $ref: '#/definitions/ordersModel'
      - properties:
          status:
            type: string
            enum: ['pending', 'canceled', 'completed','expired']
            example: "pending"
          order_id:
            type: number
            example: 645646
          redirect_url:
            type: string
            example: 'http://pagos.multicaja.cl/url_retorno'
            maximum: 300
            
  amountModel:
    type: object
    properties:
      currency:
        type: string
        example: "CLP"
      total:
        type: number
        example: 41000
      details:
        type: object
        properties:
          subtotal:
            type: number
            example: 39000
          fee:
            type: number
            example: 1000
          tax:
            type: number
            example: 1000
            
  customModel:
    type: object
    properties:
      key:
        type: string
        example: "cardId"
        maximum: 500
      value:
        type: string
        example: "1306374"
        maximum: 500


  itemModel: 
    properties:
      name:
        type: string
        example: "name"
        maximum: 150
      code:
        type: string
        example: "code"
        maximum: 64
      price:
        type: number
        example: 39000
      unit_price:
        type: number
        example: 13000
      quantity:
        type: number
        example: 3

  
        
  urlModel:
    required:
      - return_url 
      - cancel_url
    properties:
      return_url:
          type: string
          example: "http://multicaja.cl/return_url"
          maximum: 300
      cancel_url:
          type: string
          example: "http://multicaja.cl/cancel_url"
          maximum: 300
          
  webhookModel:
    required:
      - webhook_request_process 
      - webhook_confirm
    properties:
      webhook_request_process:
          type: string
          example: "http://multicaja.cl/request_url"
          maximum: 300
      webhook_confirm:
          type: string
          example: "http://multicaja.cl/confirm_url"
          maximum: 300
      webhook_reject:
          type: string
          example: "http://multicaja.cl/reject_url"
          maximum: 300
          
  paymentMethodItemObject:
    type: object
    properties:
      payment_method:
        type: string
        example: 'paypal'
      payment_max_amount:
        type: number
        example: 40000
        
  ErrorModel:
    type: object
    properties:
      code: 
        type: string
        example: ERROR_CODE
        description: Variable de error
      message:
        type: string
        example: '{error_message}'
        description: Descripción del error
